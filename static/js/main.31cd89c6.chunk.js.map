{"version":3,"sources":["lib/rx-react/module.ts","lib/rx-react/user.obs.ts","lib/rx-react/project.obs.ts","lib/rx-react/store.ts","lib/rx-react/bind.component.tsx","page1.tsx","page2.tsx","app.tsx","serviceWorker.js","index.tsx"],"names":["Icreateable","Object","classCallCheck","this","Module","_this","providers","arguments","length","undefined","map","Map","Factors","forEach","provider","name","createClass","key","value","Factor","cache","get","instance","set","existUsers","user_id","user_name","User","_Icreateable","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","defaultUser","timer","pipe","mapTo","payload","shiftUserId$","Subject","shiftUser$","id","user","find","x","err","Error","obs","merge","startWith","isLoading","shareReplay","inherits","next","existProject","proj_id","proj_name","Project","user$","module","create","switchMap","mUser","of","Math","random","uid","found","p","Bind","props","didMount$","BehaviorSubject","state","$","didmount","iif","catchError","subscribe","_ref","setState","complete","_this$state","children","React","Page1","react","Link","to","bind_component","data","message","style","background","f","onSubmit","e","preventDefault","shiftUser","current","type","ref","placeholder","width","error","Page2","App","HashRouter","basename","Switch","Route","path","component","Redirect","Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31cd89c6.chunk.js","sourcesContent":["import { Observable } from \"rxjs\";\nexport abstract class Icreateable<T> {\n    abstract obs: Observable<T>\n}\nexport interface Ioptions {\n    singleton?: boolean\n    keepAlive?: boolean\n}\n\n\nexport class Module {\n    map = new Map()\n    Factors: { [name: string]: any } = {}\n    constructor(providers: Array<{ new(): any }> = []) {\n        providers.forEach((provider) => {\n            this.Factors[provider.name] = provider\n        })\n    }\n    create<B>(Factor: { new(): B }): B {\n        const cache = this.map.get(Factor)\n        if (cache) {\n            return cache;\n        }\n        const instance = new Factor()\n        this.map.set(Factor, instance)\n        return instance\n    }\n\n}","import { Icreateable } from './module'\nimport { timer, Subject, merge, of, Observable } from 'rxjs'\nimport { mapTo, map, catchError, startWith, tap, shareReplay } from 'rxjs/operators'\n\n\nconst existUsers = [\n    { user_id: '1', user_name: '林冲' },\n    { user_id: '2', user_name: '宋江' },\n    { user_id: '3', user_name: '晃盖' },\n    { user_id: '4', user_name: '悟空' },\n]\n\nexport interface ImaybeUser {\n    payload?: {\n        user_id: string\n        user_name: string\n    }\n    err?: Error\n    isLoading?: boolean\n}\nexport class User extends Icreateable<ImaybeUser> {\n    // 假如使用该默认用户自动登录\n    private defaultUser = timer(500).pipe(\n        mapTo<number, ImaybeUser>({ payload: { user_id: '1', user_name: '林冲' } })\n    )\n    // 使用过程中可以随便切换账号\n    private shiftUserId$ = new Subject<string>()\n    private shiftUser$ = this.shiftUserId$.pipe(\n        map<string, ImaybeUser>(\n            id => {\n                const user = existUsers.find(x => x.user_id === id)\n                if (!user) {\n                    return { err: new Error('user not found') }\n                }\n                return { payload: user };\n            }\n        )\n    )\n    public obs = merge(\n        this.defaultUser,\n        this.shiftUser$\n    ).pipe(\n        startWith<ImaybeUser>({ isLoading: true }),\n        shareReplay(1)\n    )\n    public shiftUser(id: string) {\n        this.shiftUserId$.next(id)\n    }\n}\n","import { Icreateable } from './module'\nimport { module } from './store'\nimport { User } from './user.obs'\nimport { mapTo, switchMap, filter, map } from 'rxjs/operators';\nimport { of, timer, Observable } from 'rxjs';\n\nconst existProject = [\n    { proj_id: '1', proj_name: '狗不理包子店' },\n    { proj_id: '2', proj_name: 'KTV' },\n    { proj_id: '3', proj_name: '网咖不在这' },\n    { proj_id: '4', proj_name: '鬼知道是什么' },\n]\n\nexport interface ImaybeProject {\n    payload?: {\n        proj_id: string\n        proj_name: string\n    }\n    err?: Error\n    isLoading?: boolean\n}\nexport class Project extends Icreateable<ImaybeProject> {\n    private user$ = module.create(User)\n    public obs = this.user$.obs.pipe(\n        switchMap<any, ImaybeProject>(mUser => {\n            if (mUser.err || mUser.isLoading) {\n                return of({\n                    err: mUser.err,\n                    isLoading: mUser.isLoading,\n                })\n            }\n            const fakeFetch = timer((Math.random() + 0.5) * 3).pipe(map(\n                () => {\n                    const uid = mUser.payload.user_id\n                    const found = existProject.find(p => p.proj_id === uid)\n                    if (found) {\n                        return { payload: found }\n                    } else {\n                        return { err: new Error('project no found') }\n                    }\n                }\n            ))\n            return fakeFetch\n        })\n    )\n}\n","import { User } from './user.obs'\nimport { Project } from './project.obs'\n\nimport { Module } from './module'\n\nexport const module = new Module([User, Project])\n","import * as React from 'react';\nimport { of, iif, BehaviorSubject } from 'rxjs';\nimport { module } from './store'\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { Icreateable, Ioptions } from './module'\n\n\ninterface Iprops<U extends Icreateable<any>> {\n    $: { new(): U }\n    children: (\n        err: Error | undefined,\n        payload: (U extends Icreateable<infer T> ? T : never) | undefined,\n        instance: U\n    ) => React.ReactElement<any>\n}\n\nclass Bind<U extends Icreateable<any>> extends React.PureComponent<Iprops<U>, { payload?: any, err?: Error }> {\n    private didMount$ = new BehaviorSubject(false)\n    state = { payload: undefined, err: undefined }\n    instance: U;\n    constructor(props: Iprops<U>) {\n        super(props)\n        const { $ } = this.props\n        this.instance = module.create($)\n        this.didMount$.pipe(\n            switchMap(\n                didmount => iif(\n                    () => didmount,\n                    this.instance.obs\n                )\n            ),\n            map<any, { payload: any }>(payload => ({ payload })),\n            catchError<any, { err: Error }>(err => of({ err }))\n        ).subscribe(\n            ({ payload, err }) => {\n                this.setState({ payload, err })\n            }\n        )\n    }\n    componentDidMount() {\n        this.didMount$.next(true)\n    }\n    componentWillUnmount() {\n        this.didMount$.next(false)\n        this.didMount$.complete()\n    }\n    render() {\n        const { payload, err } = this.state\n        const { children } = this.props\n        return payload || err ? children(err, payload, this.instance) : \"\";\n    }\n}\n\nexport default Bind;\n","import * as React from 'react';\nimport { User } from './lib/rx-react/user.obs'\nimport Bind from './lib/rx-react/bind.component'\nimport { Project } from './lib/rx-react/project.obs';\nimport { Link } from 'react-router-dom'\n\nclass Page1 extends React.Component<any, any> {\n    render() {\n        return (\n            <div>\n                <Link to='./Page2'>\n                    Page2\n                </Link>\n                <Bind $={User}>\n                    {(err, data, instance) => {\n                        if (err && err.message !== 'user not found') {\n                            return <div style={{ background: 'red' }}>{err.message}</div>\n                        }\n                        const f = React.createRef<HTMLInputElement>()\n                        return <form onSubmit={\n                            (e) => {\n                                e.preventDefault()\n                                instance.shiftUser(f.current!.value)\n                            }\n                        }>\n                            <input type=\"text\" ref={f} placeholder=\"input some id to login, like: 1,2,3,4,5,6\" style={{ width: 300 }} />\n                        </form>\n                    }}\n                </Bind>\n\n                <Bind $={User}>\n                    {(err, data, instance) => {\n                        const error = err || data!.err\n                        if (error) {\n                            return <div style={{ background: 'red' }}>{error.message}</div>\n                        }\n                        if (data!.isLoading) {\n                            return <div>isLoading</div>\n                        }\n                        return <p>\n                            user_id: {data!.payload!.user_id}<br />\n                            user_name: {data!.payload!.user_name}\n                        </p>\n                    }}\n                </Bind>\n\n                <Bind $={Project}>\n                    {(err, data, instance) => {\n                        const error = err || data!.err\n                        if (error) {\n                            return <div style={{ background: 'red' }}>{error.message}</div>\n                        }\n                        if (data!.isLoading) {\n                            return <div>isLoading</div>\n                        }\n                        return <p>\n                            proj_id: {data!.payload!.proj_id}<br />\n                            proj_name: {data!.payload!.proj_name}\n                        </p>\n                    }}\n                </Bind>\n            </div>\n        );\n    }\n}\n\nexport default Page1;\n","import * as React from 'react';\nimport Bind from './lib/rx-react/bind.component'\nimport { Project } from './lib/rx-react/project.obs';\nimport { Link } from 'react-router-dom'\nclass Page2 extends React.Component<any, any> {\n    render() {\n        return (\n            <div>\n                <Link to='./Page1'>\n                    Page1\n                </Link>\n                <Bind $={Project}>\n                    {(err, data, instance) => {\n                        const error = err || data!.err\n                        if (error) {\n                            return <div style={{ background: 'red' }}>{error.message}</div>\n                        }\n                        if (data!.isLoading) {\n                            return <div>isLoading</div>\n                        }\n                        return <p>\n                            proj_id: {data!.payload!.proj_id}<br />\n                            proj_name: {data!.payload!.proj_name}\n                        </p>\n                    }}\n                </Bind>\n            </div>\n\n        );\n    }\n}\n\nexport default Page2;\n","import * as React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport Page1 from './page1';\nimport Page2 from './page2';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router basename=\"/rx_react_example\">\n                <Switch>\n                    <Route path=\"/Page1\" component={Page1} />\n                    <Route path=\"/Page2\" component={Page2} />\n                    <Redirect to=\"./Page1\" />\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport 'rxjs'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}